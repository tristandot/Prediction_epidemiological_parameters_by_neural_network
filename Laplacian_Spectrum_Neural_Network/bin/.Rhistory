R_install_pacakages -h
R_install_packages -h
R.version
#!/usr/local/bin/Rscript
# /usr/bin/env
R_install_packages -h
R.version
library("igraph")
library("ape")
library('ctv')
#install.views('Phylogenetics')
#update.views('Phylogenetics')
tmpArgs <- commandArgs(TRUE)
args <- NULL
i <- 1
while (i < length(tmpArgs))
{
if (tmpArgs[i] %in% c("tree", "id")) {
tmpNames <- names(args)
args <- c(args, tmpArgs[i+1])
names(args) <- c(tmpNames, tmpArgs[i])
i <- i+2
}
}
#tree<-read.table(args["tree"], header=T, stringsAsFactors=F)
tree<- paste0(args["tree"])
id<- paste0(args["id"])
#nbTrees <- read.table(args["nbTrees"], header=T, stringsAsFactors=F)
method = c("standard")
#tree = sprintf("arbre_%d.nwk",i)
phylo <- read.tree(file = tree)
x = list()
if (method == "standard") {
e = eigen(graph.laplacian(graph.adjacency(data.matrix(dist.nodes(phylo)),
weighted = T), normalized = F), symmetric = T, only.values = T)
}
if (method == "normal") {
e = eigen(graph.laplacian(graph.adjacency(data.matrix(dist.nodes(phylo)),
weighted = T), normalized = T), symmetric = T, only.values = T)
}
x = subset(e$values, e$values >= 0)
#x = e
col_res_eigenv <- as.data.frame(t(x))
line <- data.frame(me = c(col_res_eigenv))
if(dim(col_res_eigenv)[2] == 399){
line <- line[,-399]
}
write.table(line, col.names=FALSE, sep=",", row.names=c(id))
#!/usr/local/bin/Rscript
# /usr/bin/env
R.version
library("igraph")
library("ape")
library('ctv')
#install.views('Phylogenetics')
#update.views('Phylogenetics')
tmpArgs <- commandArgs(TRUE)
args <- NULL
i <- 1
while (i < length(tmpArgs))
{
if (tmpArgs[i] %in% c("tree", "id")) {
tmpNames <- names(args)
args <- c(args, tmpArgs[i+1])
names(args) <- c(tmpNames, tmpArgs[i])
i <- i+2
}
}
#tree<-read.table(args["tree"], header=T, stringsAsFactors=F)
tree<- paste0(args["tree"])
id<- paste0(args["id"])
#nbTrees <- read.table(args["nbTrees"], header=T, stringsAsFactors=F)
method = c("standard")
#tree = sprintf("arbre_%d.nwk",i)
phylo <- read.tree(file = tree)
x = list()
if (method == "standard") {
e = eigen(graph.laplacian(graph.adjacency(data.matrix(dist.nodes(phylo)),
weighted = T), normalized = F), symmetric = T, only.values = T)
}
if (method == "normal") {
e = eigen(graph.laplacian(graph.adjacency(data.matrix(dist.nodes(phylo)),
weighted = T), normalized = T), symmetric = T, only.values = T)
}
x = subset(e$values, e$values >= 0)
#x = e
col_res_eigenv <- as.data.frame(t(x))
line <- data.frame(me = c(col_res_eigenv))
if(dim(col_res_eigenv)[2] == 399){
line <- line[,-399]
}
write.table(line, col.names=FALSE, sep=",", row.names=c(id))
